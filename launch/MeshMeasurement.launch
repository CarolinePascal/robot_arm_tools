<?xml version="1.0" ?>
<launch>

	<!-- GENERAL ARGUMENTS -->
	<arg name="robot_name" default="panda"/>
	<arg name="tool_name" default="microGRAS"/>
	<arg name="simulation" default="false"/>
	<arg name="calibration" default="true"/>
	<arg name="safety_distance" default="0.04"/>

	<!-- ROBOT SETUP -->
	<include file="$(find robot_arm_tools)/launch/Setup_$(arg robot_name).launch">
		<arg name="tool_name" value="$(arg tool_name)"/>
		<arg name="simulation" value="$(arg simulation)"/>
		<arg name="calibration" value="$(arg calibration)"/>
		<arg name="safety_distance" value="$(arg safety_distance)"/>
	</include>

	<!-- STUDIED OBJECT -->
	<node pkg="robot_arm_tools" type="robot_arm_tools_environment_node" name="robot_arm_tools_environment_node_object" output="screen">
		<param name="environmentFileName" value="$(find robot_arm_acoustic)/config/environments/StudiedObject.yaml"/>
	</node>

	<!-- MEASUREMENT SERVER -->
	<arg name="measurement_server_storage_folder" default="/home/demo1/AcousticMeasurements/MeshMeasurements/"/>
	<param name="measurementServerName" value=""/>
	<param name="measurementServerStorageFolder" value="$(arg measurement_server_storage_folder)"/>
	<node pkg="robot_arm_acoustic" type="SoundMeasurementServer.py" name="sound_measurement_server" output="screen"/>

	<!-- MESH HANDLING -->
	<arg name="mesh_generation" default=""/>
	<arg name="mesh_type" default="sphere"/>
	<arg name="mesh_size" default="0.3"/>	<!-- Radius = Size/2 -->
	<arg name="mesh_resolution" default="0.05"/>

	<arg name="mesh_path" default="/home/demo1/catkin_ws/src/robot_arm_acoustic/config/meshes/custom_0.02/MeasurementsMesh/P1/MeasurementsMesh.yaml" unless="$(eval arg('mesh_generation') == 'automatic')"/>

	<arg name="mesh_path" default="$(find robot_arm_acoustic)/config/meshes/$(arg mesh_type)/$(arg mesh_size)_$(arg mesh_resolution).yaml" if="$(eval arg('mesh_generation') == 'automatic')"/>
	<node pkg="robot_arm_acoustic" type="MeshTools.py" name="mesh_tools" args="--mesh_type $(arg mesh_type) --mesh_size $(arg mesh_size) --mesh_resolution $(arg mesh_resolution) --element_type P0 --save_mesh --save_yaml" if="$(eval arg('mesh_generation') == 'automatic')"/>

	<param name="meshPath" value="$(arg mesh_path)"/>
	<param name="meshType" value="$(arg mesh_type)"/>
	<param name="meshSize" value="$(arg mesh_size)"/>
	<param name="meshResolution" value="$(arg mesh_resolution)"/>

	<!-- MAIN NODE -->
	<node pkg="robot_arm_acoustic" type="robot_arm_acoustic_mesh_measurement_node" name="robot_arm_acoustic_mesh_measurement_node" output="screen" required="true"/>

	<!-- TO REMOVE -->
	<arg name="gradient" default="false"/>
	<param name="gradientMeasurements" value="$(arg gradient)"/>

	<!-- Run Rviz --> 
    <node pkg="robot_arm_tools" type="robot_arm_tools_environment_node" name="robot_arm_tools_environment_node_environment" output="screen">
		<param name="environmentFileName" value="$(find robot_arm_acoustic)/config/environments/GarteurAnechoicRoom.yaml"/>
	</node>
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find robot_arm_acoustic)/config/AcousticSetup.rviz"/>

</launch>
